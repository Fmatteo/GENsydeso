<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAABe8AAAXvAYBivZwAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAEhElEQVR4Xu2b2YscRRzHx/u+QMQDPEFQoyCKoiIGj4VlM1NVPTR58FpQ9kV988HjJYL+A6Io+uJD
        FESJERUffBLfFM8QQSJKEpie3smBhsS4YXf8/np+Y8ae3657dLE68/3AF4btb1XR3+qurq6trhFCCCGE
        EEIIIYQQQgghhPwX6NZqJ7Sdu73t/bPtxH/QDv4HaH8e/AGR/O79LWyDnsm8v03KaHGyWnZPTV3QTtxz
        CPdnqLsiJX6XdMZB78/X6shy6c7MnILwnkeQvw8Fu3L9Jh0hdWr1ZCnyZuMmhLajFGIFCt9DG7QZYpEH
        90g7uD/sACvRkTyEB7U5MgjG7KcQ0EIpsBiaz0J4QpslAmY3jyGY5YbfwV2yFXoRs50nRfIbdbyNY/tK
        3sW0gHLT2vx403LubgRyrBSQpY9y7ye6GzeerEWHkGPiQWd8YpQvay537k4tOp4cSNPzMI/fa4QzqG8x
        bt+hRZZNniR39R68Zp197dk/OXmuFhk/cLW+aoQyILd11+TkaWpfMb9OT5+uQ5NRt8r7l9U+XrTr9asQ
        wFJDz7vdLVtOVPuq6abpSVni3zfq72uulSRXqH18yIJ7zQijry/3pukZal0zrXr9TAx1XxvtFJI7Ua3j
        gYSLE8cbqhnIsU4I16q1MlohXCd1l9rq66AMV2odfTAPT40QVOF1tVUO6n7TbrO4C7zaRh88XN+wQoBk
        fn6l2ioHIV9jtFlIhkS1jT444R/LAYgQ/jdqiQba+a7crmqHWkYbeVnCyc6VTr4QrsIX1BaN4q3ZaBs6
        KjMmtY0urbR+uXHyhfLEP6y2aOD586jVtmhfuukytY0uWbN+g3Xyhby/T23RyJvufrNtKHPuerWNLvJm
        mzebV1tay1vvcuktUSzSAbg41EZigamos8IXzabpxWojsciDe9oKH1rYmaanqo3EAkFvLwXfU+J/UQuJ
        BYafixD20aHwoTz4t9RGYqFbXIbCL5S4x9VGYtBpNC5F0IeGgu/psPxzSK2kaoqddSF8aATf1ztqJTFY
        cugJfn622bhZraRqEP5mhLzojgs+fCOCYWcTQv6zHPqAZjtJconaSZW0k0YDAZurrqr5PIQH1E5Wiez1
        HFq/kUU9BHykFHhJ4SW1kzVwI/SPDbdZCPcg4MPDgR8Xrvz3+P1ABHBV34uA/+XK99u5VT0CxRc0i++0
        6Mn7z6rc7kIUXPkbEPDS4Qf3MVc7IyBLCFnwP9mh94Qx//P2xMRZWoRUCa7+bVbof4vDTjxy7x8yQ1fh
        zvhiNk3PVjupEtlWjpDzcugD2tlpNM5RO6kaDD3yFaUVvOgQZkXyjkBiIBuoEPKeUujHlbjNaiUxyJJk
        ygweyoL7VG0kFnlwr1jhi1rNxq1qI7HA+G9/++X9V2ohsdDNvfND4RfiCmd0ELJsLTHCL954E7WRWMgG
        Wit8kXxzrDZCCCGEEEIIIWREaNXrF+bez1iSY2ojsWh5f4u1DCGSY2ojsWAHrDPsgHWGHbDOsAPWGXYA
        IYQQQgghhBBCCCGEEEL+X9RqfwHHtn9wj3FaCAAAAABJRU5ErkJggg==
</value>
  </data>
</root>