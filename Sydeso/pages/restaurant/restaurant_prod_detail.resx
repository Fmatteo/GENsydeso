<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAF
        7wAABe8BgGK9nAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAASESURBVHhe7ZvZ
        ixxFHMfH+75AxAM8QVCjIIqiIgaPhWUzU1U9NHnwWlD2RX3zweMlgv4Doij64kMURIkRFR98Et8UzxBB
        IkoSmJ7eyYGGxLhhd/z+en5jxp7frnt0sTrz/cAXhu1vVdHf6q6urq2uEUIIIYQQQgghhBBCCCGE/Bfo
        1montJ27ve39s+3Ef9AO/gdofx78AZH87v0tbIOeyby/TcpocbJadk9NXdBO3HMI92eouyIlfpd0xkHv
        z9fqyHLpzsycgvCeR5C/DwW7cv0mHSF1avVkKfJm4yaEtqMUYgUK30MbtBlikQf3SDu4P+wAK9GRPIQH
        tTkyCMbspxDQQimwGJrPQnhCmyUCZjePIZjlht/BXbIVehGznSdF8ht1vI1j+0rexbSActPa/HjTcu5u
        BHKsFJClj3LvJ7obN56sRYeQY+JBZ3xilC9rLnfuTi06nhxI0/Mwj99rhDOobzFu36FFlk2eJHf1Hrxm
        nX3t2T85ea4WGT9wtb5qhDIgt3XX5ORpal8xv05Pn65Dk1G3yvuX1T5etOv1qxDAUkPPu90tW05U+6rp
        pulJWeLfN+rva66VJFeofXzIgnvNCKOvL/em6RlqXTOtev1MDHVfG+0UkjtRreOBhIsTxxuqGcixTgjX
        qrUyWiFcJ3WX2urroAxXah19MA9PjRBU4XW1VQ7qftNus7gLvNpGHzxc37BCgGR+fqXaKgchX2O0WUiG
        RLWNPjjhH8sBiBD+N2qJBtr5rtyuaodaRht5WcLJzpVOvhCuwhfUFo3irdloGzoqMya1jS6ttH65cfKF
        8sQ/rLZo4PnzqNW2aF+66TK1jS5Zs36DdfKFvL9PbdHIm+5+s20oc+56tY0u8mabN5tXW1rLW+9y6S1R
        LNIBuDjURmKBqaizwhfNpunFaiOxyIN72gofWtiZpqeqjcQCQW8vBd9T4n9RC4kFhp+LEPbRofChPPi3
        1EZioVtchsIvlLjH1UZi0Gk0LkXQh4aC7+mw/HNIraRqip11IXxoBN/XO2olMVhy6Al+frbZuFmtpGoQ
        /maEvOiOCz58I4JhZxNC/rMc+oBmO0lyidpJlbSTRgMBm6uuqvk8hAfUTlaJ7PUcWr+RRT0EfKQUeEnh
        JbWTNXAj9I8Nt1kI9yDgw8OBHxeu/Pf4/UAEcFXfi4D/5cr327lVPQLFFzSL77ToyfvPqtzuQhRc+RsQ
        8NLhB/cxVzsjIEsIWfA/2aH3hDH/8/bExFlahFQJrv5tVuh/i8NOPHLvHzJDV+HO+GI2Tc9WO6kS2VaO
        kPNy6APa2Wk0zlE7qRoMPfIVpRW86BBmRfKOQGIgG6gQ8p5S6MeVuM1qJTHIkmTKDB7KgvtUbSQWeXCv
        WOGLWs3GrWojscD4b3/75f1XaiGx0M2980PhF+IKZ3QQsmwtMcIv3ngTtZFYyAZaK3yRfHOsNkIIIYQQ
        QgghZERo1esX5t7PWJJjaiOxaHl/i7UMIZJjaiOxYAesM+yAdYYdsM6wA9YZdgAhhBBCCCGEEEIIIYQQ
        Qv5f1Gp/Ace2f3CPcVoIAAAAAElFTkSuQmCC
</value>
  </data>
</root>